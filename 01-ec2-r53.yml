- name: create ec2 and r53
  hosts: local
  connection: local
  vars:
    ami_id: "ami-09c813fb71547fc4f"
    sg_id: "sg-0d23d616835f667d2"
    zone_id: "Z010390123HOH4FQQXEBF"
    domain_name: "srinivasa.fun"
    # we can pass it through command line
    # instances:
    #  - rabbitmq
     
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  # - name: print the ec2_output
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"

  # - name: print the private_ip_address
  #   ansible.builtin.debug:
  #    msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: print the public_ip_address
  #   ansible.builtin.debug:
  #    msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  - name: Add route 53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item}}.{{ domain_name }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"

    # we are creating one record with public only for frontend
  - name: create route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}" # srinivasa.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"

